{"version":3,"file":"smokeTest/combinedSmokeTests.js","mappings":"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","sources":["webpack:///webpack/bootstrap","webpack:///webpack/runtime/compat get default export","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///external commonjs \"k6\"","webpack:///external commonjs \"k6/http\"","webpack:///./support/config/urls.ts","webpack:///./support/api/identity.ts","webpack:///./support/config/constants.ts","webpack:///./support/api/accessControl.ts","webpack:///./support/api/arrangementManager.ts","webpack:///./smokeTest/combinedSmokeTests.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"k6\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"k6/http\");","const baseUrl = 'http://localhost:8280';\nconst identityUrl = 'http://localhost:8180';\n\nconst identityRealmPath = '/auth/realms/';\nconst identityAuthPath = '/protocol/openid-connect/token';\n\n// Service Names\nconst accessControlServiceName = 'access-control';\nconst arrangementManagerServiceName = 'arrangement-manager';\n\n// Service API Paths\nconst accessControlPath = '/api/' + accessControlServiceName + '/client-api';\nconst arrangementManagerPath = '/api/' + arrangementManagerServiceName + '/client-api';\n\n// Identity\nexport function getIdentityAuthUrl(realm) {\n    return `${identityUrl}${identityRealmPath}${realm}${identityAuthPath}`;\n}\n\n// Access Control\nexport function getUserContextServiceAgreementsUrl() {\n    return `${baseUrl}${accessControlPath}/v3/accessgroups/user-context/service-agreements`;\n}\n\nexport function getUserContextUrl() {\n    return `${baseUrl}${accessControlPath}/v2/accessgroups/usercontext`;\n}\n\n// Arrangement Manager\nexport function getAggregationsPath() {\n    return `${baseUrl}${arrangementManagerPath}/v2/balances/aggregations`\n}\n\nexport function getProductKindsPath() {\n    return `${baseUrl}${arrangementManagerPath}/v2/product-kinds`\n}\n\nexport function getidentityUsersPath(realm) {\n    return `${identityUrl}/auth/admin/realms/${realm}/users`;\n} \n","import http from 'k6/http';\nimport { check } from 'k6';\nimport { getIdentityAuthUrl, getidentityUsersPath } from '../config/urls';\nimport { getUserContext } from '../config/constants';\n\nexport function getAccessToken(realm, clientId) {\n  let url = getIdentityAuthUrl(realm);\n\n  let requestBody = { username: 'admin', password: 'admin', grant_type: 'password', client_id: clientId };\n  let response = http.post(url, requestBody, { headers: { 'Content-Type': 'application/x-www-form-urlencoded' } });\n  let access_token = response.json(\"access_token\");\n\n  check(response, {\n    'auth status is 200': () => response.status === 200\n  });\n\n  check(access_token, {\n    'access_token is not empty': () => access_token !== undefined\n  })\n  \n  return access_token;\n}\n\nexport function createUser(access_token, userName) {\n  \n  let url = getidentityUsersPath('backbase');\n  let headers = { 'Content-Type': 'application/json', 'Authorization': 'Bearer ' + access_token };\n  let userContext = getUserContext();\n  let cookies = { USER_CONTEXT: userContext };\n\n  let requestBody = { \n        'username': `${userName}`,\n        'enabled': 'true',\n        'firstName': 'BE',\n        'lastName': 'Dev',\n        'credentials': [\n            {\n                'type': 'password',\n                'value': 'password'\n            }\n        ]  \n  };\n  \n  let response = http.post(url, JSON.stringify(requestBody), { headers: headers, cookies: cookies });\n\n  check(response, {\n    'createUser response status code is 201': () => response.status === 201\n  });\n}\n\nexport function getUsers(access_token) {\n  \n  let url = getidentityUsersPath('backbase');\n  let userContext = getUserContext();\n\n  let headers = { 'Accept': '*/*', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Bearer ' + access_token };\n  let cookies = { USER_CONTEXT: userContext };\n\n  let response = http.get(url, { headers: headers, cookies: cookies });\n\n  check(response, {\n    'getUsers response status code is 200': () => response.status === 200\n  });\n\n  return response;\n}\n\nexport function deleteUser(access_token, userName) {\n  \n  let userToDelete = getUserByUsername(access_token, userName);\n  let url = `${getidentityUsersPath('backbase')}/${userToDelete.id}`;\n  let userContext = getUserContext();\n\n  let headers = { 'Accept': '*/*', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Bearer ' + access_token };\n  let cookies = { USER_CONTEXT: userContext };\n\n  let response = http.del(url, null, { headers: headers, cookies: cookies });\n\n  check(response, {\n    'deleteUser response status code is 204': () => response.status === 204\n  });\n}\n\nfunction getUserByUsername(access_token, userName) {\n  let response = getUsers(access_token);\n\n  let body = response?.body.toString();\n  \n  if (body !== undefined && body !== null) {\n    \n    let users = JSON.parse(body);\n    //ToDo get user by username, rather than getting last used by default return order in response\n    //let user = users.filter(u => u.username == userName);\n    let user = users[users.length - 1];\n\n    check(user, {\n      'User Found': () => user !== undefined && user !== null\n    });\n\n    return user\n\n  } else {\n    check(null, {\n        'Error extracting Users': () => false\n    });\n  }\n\n  return null;\n}\n","\n// Client Ids\nconst adminCliClientId = 'admin-cli';\nconst bbToolingClient = 'bb-tooling-client';\n\nconst userContext =\n        'eyJraWQiOiJaNXB5dkxcL3FMYUFyR3ZiTkY3Qm11UGVQU1Q4R0I5UHBPR0RvRnBlbmIxOD0iLCJjdHkiOiJKV1QiLCJlbmMiOiJBMTI4Q0JDLUhTMjU2IiwiYWxnIjoiZGlyIn0..tMfNToj_V8l223g2qq-vAQ.m_sJ7rkBrFBn9n7FDYpS_AKgeclXISyq0uPjE1-2uIjezFW6KpXahPZzyZnZMsWdCqIC_E9J_Rnw63aAa_l05OLKoh5t8h-Ksa35iJ9tn2NG_Mjl8XHwXNPpYxAe0Rxyp7tHA64E2fICGyW2NEUsa9u_DwLarRumStiZljboI12X0xv0zqN7KVBjSBRS0JrAdJ2pYxVEB-KlXdpWuNIoWwPccY4UVhvr32PPzw8AxpDdys1LDf6fxbLy6S3fy0L4LNkvKIq5gzsWD8kvnducMLIK87u9dysl-MeFrznaiecKEQVgqLFsmwRWShujcXHy.AQhfRyuBuACzuMumtlgEMw';\n\nexport function getUserContext() {\n    return userContext;\n}\n","import http from 'k6/http';\nimport { check } from 'k6';\nimport { getUserContextServiceAgreementsUrl, getUserContextUrl } from '../config/urls';\nimport { getUserContext } from '../config/constants';\n\nexport function getUserContextServiceAgreements(access_token) {\n  let url = getUserContextServiceAgreementsUrl();\n  let userContext = getUserContext();\n\n  let headers = { 'Accept': '*/*', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Bearer ' + access_token };\n  let cookies = { USER_CONTEXT: userContext };\n\n  let response = http.get(url, { headers: headers, cookies: cookies });\n\n  check(response, {\n      'getUserContextServiceAgreements status is 200': () => response.status === 200\n  });\n\n  return response;\n}\n\nexport function setUserContext(access_token, serviceAgreementsResponse) {\n    let msa_id = extractMSAId(serviceAgreementsResponse);\n    \n    let url = getUserContextUrl();\n    let userContext = getUserContext();\n  \n    let saHeaders = { 'Content-Type': 'application/json', 'Authorization': 'Bearer ' + access_token };\n    let requestBody = { 'serviceAgreementId': `${msa_id}` };\n    let saCookies = { USER_CONTEXT: userContext };\n\n    let response = http.post(url, JSON.stringify(requestBody), { headers: saHeaders, cookies: saCookies });\n  \n    check(response, {\n        'setUserContext status is 204': () => response.status === 204\n    });\n}\n\nfunction extractMSAId(serviceAgreementsResponse) {\n\n  let body = serviceAgreementsResponse.body;\n  if (body !== undefined && body !== null) {\n    var jsonData = JSON.parse(body);\n    let msa_id = jsonData[0].id;\n    return msa_id;\n  } else {\n    check(null, {\n        'Error extracting MSA ID': () => false\n    });\n  }\n}\n","import http from 'k6/http';\nimport { check } from 'k6';\nimport { getAggregationsPath, getProductKindsPath } from '../config/urls';\nimport { getUserContext } from '../config/constants';\n\nexport function getBalancesAggregations(access_token) {\n\n  let url = getAggregationsPath();\n  let userContext = getUserContext();\n\n  let saHeaders = { 'Accept': '*/*', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Bearer ' + access_token };\n  let saCookies = { USER_CONTEXT: userContext };\n\n  let response = http.get(url, { headers: saHeaders, cookies: saCookies });\n\n  check(response, {\n    'getBalancesAggregations status is 200': () => response.status === 200\n  });\n}\n\nexport function getProductKinds(access_token) {\n\n  let url = getProductKindsPath();\n  let userContext = getUserContext();\n\n  let saHeaders = { 'Accept': '*/*', 'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': 'Bearer ' + access_token };\n  let saCookies = { USER_CONTEXT: userContext };\n\n  let response = http.get(url, { headers: saHeaders, cookies: saCookies });\n\n  check(response, {\n    'getProductKinds status is 200': () => response.status === 200\n  });\n}\n","import { sleep } from 'k6';\nimport { getAccessToken } from '../support/api/identity';\nimport { getUserContextServiceAgreements, setUserContext } from '../support/api/accessControl';\n\nimport { getBalancesAggregations, getProductKinds } from '../support/api/arrangementManager';\n\nexport let options = {\n  stages: [\n    { duration: '10s', target: 10 },\n    { duration: '10s', target: 100 },\n    { duration: '10s', target: 10 },\n  ],\n};\n\nexport default () => {\n  const access_token = getAccessToken('backbase', 'bb-tooling-client');\n\n  // Access Control tests\n  let serviceAgreementsResponse = getUserContextServiceAgreements(access_token);\n  setUserContext(access_token, serviceAgreementsResponse);\n\n  // Arrangement Manager tests\n  getBalancesAggregations(access_token);\n  getProductKinds(access_token);\n  sleep(1);\n};\n"],"names":["baseUrl","identityUrl","identityRealmPath","identityAuthPath","accessControlServiceName","arrangementManagerServiceName","accessControlPath","arrangementManagerPath","getIdentityAuthUrl","realm","getUserContextServiceAgreementsUrl","getUserContextUrl","getAggregationsPath","getProductKindsPath","getidentityUsersPath","http","check","getUserContext","getAccessToken","clientId","url","requestBody","username","password","grant_type","client_id","response","post","headers","access_token","json","status","undefined","createUser","userName","userContext","cookies","USER_CONTEXT","JSON","stringify","getUsers","get","deleteUser","userToDelete","getUserByUsername","id","del","body","toString","users","parse","user","length","adminCliClientId","bbToolingClient","getUserContextServiceAgreements","setUserContext","serviceAgreementsResponse","msa_id","extractMSAId","saHeaders","saCookies","jsonData","getBalancesAggregations","getProductKinds","sleep","options","stages","duration","target"],"sourceRoot":""}