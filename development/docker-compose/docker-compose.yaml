x-common-variables: &common-variables
  JAVA_TOOL_OPTIONS: -XX:MaxRAMPercentage=60.0 -Dlogging.level.com.backbase=DEBUG
  SIG_SECRET_KEY: JWTSecretKeyDontUseInProduction!
  USERCTX_KEY: JWTSecretKeyDontUseInProduction!
  EXTERNAL_SIG_SECRET_KEY: JWTSecretKeyDontUseInProduction!
  EXTERNAL_ENC_SECRET_KEY: JWTEncKeyDontUseInProduction666!
  server.shutdown: graceful
  server.max-http-header-size: 64KB
  server.forward-headers-strategy: framework
  eureka.client.serviceUrl.defaultZone: http://registry:8080/eureka
  eureka.client.registry-fetch-interval-seconds: 15
  eureka.client.instance-info-replication-interval-seconds: 15
  eureka.client.healthcheck.enabled: true
  eureka.instance.non-secure-port: 8080
  eureka.instance.prefer-ip-address: true
  eureka.instance.initialStatus: STARTING
  management.endpoints.web.exposure.include: '*'
  management.endpoints.enabled-by-default: true
  management.security.roles: ANONYMOUS,ACTUATOR,USER
  management.endpoint.env.show-values: ALWAYS
  management.endpoint.configprops.show-values: ALWAYS
  management.tracing.enabled: false
  spring.main.banner-mode: off
  spring.cloud.config.enabled: false
  backbase.audit.enabled: false
  backbase.security.public.paths: /integration-api/**,/oauth/token,/convert,/service-api/**
  backbase.security.mtls.enabled: false
  backbase.http.request-logging-filter.max-payload-length: 5000
  logging.level.com.backbase: DEBUG
  logging.level.org.springframework.web.filter.CommonsRequestLoggingFilter: DEBUG

x-database-variables: &database-variables
  logging.level.liquibase: INFO
  spring.liquibase.enabled: true
  spring.datasource.username: root
  spring.datasource.password: root
  spring.datasource.driver-class-name: com.mysql.cj.jdbc.Driver
  spring.jpa.properties.hibernate.dialect: org.hibernate.dialect.MySQL8Dialect

x-message-broker-variables: &message-broker-variables
  spring.activemq.broker-url: tcp://activemq:61616
  spring.activemq.user: admin
  spring.activemq.password: admin

x-healthcheck-defaults: &healthcheck-defaults
  start_period: 60s
  interval: 15s
  timeout: 15s
  retries: 15

name: backbase

volumes:
  mysql_data:
    driver: local

services:
  mysql:
    image: mysql:8.4.0
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: mysqladmin ping --silent
      interval: 10s
      timeout: 5s
      retries: 5

  activemq:
    image: apache/activemq-classic
    ports:
      - "61616:61616"
      - "8161:8161"
    healthcheck:
      test: activemq status
      interval: 10s
      timeout: 5s
      retries: 5

  registry:
    image: repo.backbase.com/backbase-docker-releases/registry:${BB_VERSION}
    ports:
      - "8761:8080"
    volumes:
      - ./exe/HealthCheck.jar:/tmp/HealthCheck.jar
    healthcheck:
      <<: *healthcheck-defaults
      test: [ "CMD", "java", "-jar", "/tmp/HealthCheck.jar" ]

  edge:
    image: repo.backbase.com/backbase-docker-releases/edge:${BB_VERSION}
    ports:
      - "8280:8080"
    environment:
      <<: *common-variables
      gateway.actuator.security.enabled: false
      gateway.csrf.enabled: false
    volumes:
      - ./exe/HealthCheck.jar:/tmp/HealthCheck.jar
    healthcheck:
      <<: *healthcheck-defaults
      test: [ "CMD", "java", "-jar", "/tmp/HealthCheck.jar", "http://registry:8080/eureka/apps/edge", "<status>UP</status>" ]
    links:
      - registry
      - token-converter

  token-converter:
    image: repo.backbase.com/backbase-docker-releases/oidc-token-converter-service:${BB_VERSION}
    ports:
      - "7779:8080"
    environment:
      <<: *common-variables
      backbase.oidc-token-converter.whitelistedDomains[0].internalHostScheme: http
      backbase.oidc-token-converter.whitelistedDomains[0].internalHost: backbase-identity:8080
      backbase.oidc-token-converter.whitelistedDomains[0].issuerHost: localhost
      backbase.token-converter.claims-mapping.internal: exchangeApiKey
      backbase.oidc-token-converter.bbusage-force-userinfo: single-use
    volumes:
      - ./exe/HealthCheck.jar:/tmp/HealthCheck.jar
    healthcheck:
      <<: *healthcheck-defaults
      test: [ "CMD", "java", "-jar", "-Xms5M", "-Xmx10M", "/tmp/HealthCheck.jar", "http://registry:8080/eureka/apps/token-converter", "<status>UP</status>" ]
    links:
      - registry
      - backbase-identity

  backbase-identity:
    image: auth-server:${BB_VERSION}
    build:
      context: ../images/auth-server
      args:
        IDENTITY_BUILDER: repo.backbase.com/backbase-docker-releases/auth-server-builder:${BB_VERSION}
    ports:
      - '8180:8080'
      - "5666:5666"
    environment:
      KEYCLOAK_ADMIN: "admin"
      KEYCLOAK_ADMIN_PASSWORD: "admin"
      exchangeApiKey: "4e425f9510d57f6b736b1ddc"
      BACKBASE_HTTP_CORS: "true"
      BACKBASE_HTTP_CORS_EXPOSED_HEADERS: "Location"
      BACKBASE_HTTP_CORS_ORIGINS: "http://localhost:4200,http://localhost:8080"
      KC_DB_URL: "jdbc:mysql://mysql:3306/backbase_identity?useSSL=false&allowPublicKeyRetrieval=true&cacheServerConfiguration=true&createDatabaseIfNotExist=true"
      KC_DB_USERNAME: "root"
      KC_DB_PASSWORD: "root"
      KC_LOG_LEVEL: "INFO"
      KC_LOG_CONSOLE_FORMAT: "%d{yyy:MM:dd HH:mm:ss.SSS} %-5p [%X{traceId},%X{spanId},%X{sampled}] %i --- [%t] %c{2.} : %m%n"
      KC_HOSTNAME_URL: "http://localhost:8180/auth/"
      KC_SPI_SERVICE_TOKEN_DEFAULT_URL: "http://token-converter:8080"
      KC_SPI_USER_MANAGER_CLIENT_DEFAULT_URL: "http://user-manager:8080"
      KC_SPI_CONNECTIONS_JPA_LEGACY_INITIALIZE_EMPTY: "true"
      KC_SPI_CONNECTIONS_JPA_LEGACY_MIGRATION_STRATEGY: "update"
      KC_SPI_WEB_AUTHENTICATION_SERVICE_CLIENT_DEFAULT_URL: "http://localhost:8180"
      KC_SPI_STEP_UP_CONFIG_DEFAULT_CUSTOMERREALM_NAME: "customer"
      KC_SPI_STEP_UP_CONFIG_DEFAULT_CUSTOMERREALM_CLIENTS_TESTCLIENT_NAME: "test-client"
      KC_SPI_STEP_UP_CONFIG_DEFAULT_CUSTOMERREALM_CLIENTS_TESTCLIENT_ACR_VALUES_STEPUP_ACR: "gold"
      KC_SPI_STEP_UP_CONFIG_DEFAULT_CUSTOMERREALM_CLIENTS_TESTCLIENT_ACR_VALUES_STEPUP_PRIORITY: "2"
      KC_SPI_STEP_UP_CONFIG_DEFAULT_CUSTOMERREALM_CLIENTS_TESTCLIENT_ACR_VALUES_STEPUP_DEFAULT: "bb-su:change-email"
      JAVA_TOOL_OPTIONS: "-Dquarkus.log.category.'\"com.backbase\"'.level=DEBUG \
                          -Dquarkus.log.category.'\"org.keycloak.protocol.oidc\"'.level=TRACE"
    volumes:
      - ./exe/HealthCheck.jar:/tmp/HealthCheck.jar
    healthcheck:
      <<: *healthcheck-defaults
      test: [ "CMD", "java", "-jar", "-Xms5M", "-Xmx10M", "/tmp/HealthCheck.jar", "http://localhost:8080/auth/realms/backbase/.well-known/openid-configuration", "backbase" ]
    depends_on:
      mysql:
        condition: service_healthy

  access-control:
    image: repo.backbase.com/backbase-docker-releases/access-control:${BB_VERSION}
    ports:
      - "8040:8080"
    environment:
      <<: [*common-variables, *message-broker-variables, *database-variables]
      spring.datasource.url: jdbc:mysql://mysql:3306/access-control?useSSL=false&allowPublicKeyRetrieval=true&cacheServerConfiguration=true&createDatabaseIfNotExist=true
    volumes:
      - ./exe/HealthCheck.jar:/tmp/HealthCheck.jar
    healthcheck:
      <<: *healthcheck-defaults
      test: [ "CMD", "java", "-jar", "-Xms5M", "-Xmx10M", "/tmp/HealthCheck.jar", "http://registry:8080/eureka/apps/access-control", "<status>UP</status>" ]
    depends_on:
      mysql:
        condition: service_healthy
    links:
      - activemq
      - registry

  arrangement-manager:
    image: repo.backbase.com/backbase-docker-releases/arrangement-manager:${BB_VERSION}
    ports:
      - "8050:8080"
    environment:
      <<: [*common-variables, *message-broker-variables, *database-variables]
      spring.datasource.url: jdbc:mysql://mysql:3306/arrangement-manager?useSSL=false&allowPublicKeyRetrieval=true&cacheServerConfiguration=true&createDatabaseIfNotExist=true
      SPRING_CONFIG_ADDITIONAL_LOCATION: /extraConfig/application.yml
    volumes:
      - ./exe/HealthCheck.jar:/tmp/HealthCheck.jar
      - ./configuration/arrangement-manager/application.yml:/extraConfig/application.yml
    healthcheck:
      <<: *healthcheck-defaults
      test: [ "CMD", "java", "-jar", "-Xms5M", "-Xmx10M", "/tmp/HealthCheck.jar", "http://registry:8080/eureka/apps/arrangement-manager", "<status>UP</status>" ]
    depends_on:
      mysql:
        condition: service_healthy
    links:
      - activemq
      - registry

  user-manager:
    image: repo.backbase.com/backbase-docker-releases/user-manager:${BB_VERSION}
    ports:
      - "8060:8080"
    environment:
      <<: [*common-variables, *message-broker-variables, *database-variables]
      spring.datasource.url: jdbc:mysql://mysql:3306/user-manager?useSSL=false&allowPublicKeyRetrieval=true&cacheServerConfiguration=true&createDatabaseIfNotExist=true
      backbase.users.identity-endpoints-enabled: true
      backbase.users.identity-integration-enabled: true
      backbase.users.sync-primary-to-identity-enabled: true
      spring.cloud.discovery.client.simple.instances.user-integration-outbound-service[0].uri: http://wiremock:8080
      backbase.security.rules-enabled: true
      backbase.security.deny-all: false
      backbase.security.rules.user-manager-client-api.step-up.acr-values: gold
      backbase.security.rules.user-manager-client-api.to.0.methods: POST
      backbase.security.rules.user-manager-client-api.to.0.paths: /client-api/v2/users/*/profile/electronic-addresses
      backbase.security.rules.user-manager-client-api.to.1.methods: PUT
      backbase.security.rules.user-manager-client-api.to.1.paths: /client-api/v2/users/*/profile/electronic-addresses/*
      backbase.security.rules.user-manager-client-api.to.2.methods: DELETE
      backbase.security.rules.user-manager-client-api.to.2.paths: /client-api/v2/users/*/profile/electronic-addresses/*
      backbase.security.rules.user-manager-client-api.when.match: ALL
      backbase.security.rules.user-manager-client-api.when.values.0: bb-su:change-email
      backbase.security.rules.user-manager-client-api.when.token: CLIENT
      backbase.security.rules.user-manager-client-api.order: 1
    volumes:
      - ./exe/HealthCheck.jar:/tmp/HealthCheck.jar
    healthcheck:
      <<: *healthcheck-defaults
      test: [ "CMD", "java", "-jar", "-Xms5M", "-Xmx10M", "/tmp/HealthCheck.jar", "http://registry:8080/eureka/apps/user-manager", "<status>UP</status>" ]
    depends_on:
      mysql:
        condition: service_healthy
    links:
      - activemq
      - registry

  limit:
    image: repo.backbase.com/backbase-docker-releases/limit:${BB_VERSION}
    ports:
      - "8350:8080"
    environment:
      <<: [ *common-variables, *message-broker-variables, *database-variables ]
      spring.datasource.url: jdbc:mysql://mysql:3306/limits?useSSL=false&allowPublicKeyRetrieval=true&cacheServerConfiguration=true&createDatabaseIfNotExist=true
      "backbase.limits.defaults.currency": "USD"
      "backbase.limits.global.enabled": "true"
      "backbase.limits.integration.retry.attempts-number": "2"
      "backbase.limits.defaults.firstDayOfWeek": "Sunday"
      "backbase.limits.applicableCurrency.currencyList": "EUR,GBP,USD,AED,AUD,BRL,CAD,CNY,HKD,INR,JPY,JOD,RUB,SGD,ZAR"
    volumes:
      - ./scripts/HealthCheck.java:/tmp/HealthCheck.java
    healthcheck:
      <<: *healthcheck-defaults
      test: [ "CMD", "java", "/tmp/HealthCheck.java", "http://registry:8080/eureka/apps/limit", "<status>UP</status>" ]

    depends_on:
      mysql:
        condition: service_healthy
    links:
      - registry

  contact-manager:
    image: repo.backbase.com/backbase-docker-releases/contact-manager:${BB_VERSION}
    ports:
      - "8051:8080"
    environment:
      <<: [ *common-variables, *message-broker-variables, *database-variables ]
      spring.datasource.url: jdbc:mysql://mysql:3306/contact-manager?useSSL=false&allowPublicKeyRetrieval=true&cacheServerConfiguration=true&createDatabaseIfNotExist=true
      backbase.contact.entitlements.set-context-legal-entity-with-extra-service-call: "false"
      backbase.contact.approval.enabled: "false"
      backbase.contact.supported-countries.fetch-payments-sanctioned-countries: "false"
    volumes:
      - ./scripts:/tmp/h
    healthcheck:
      <<: *healthcheck-defaults
      test: [ "CMD", "java", "/tmp/h/HealthCheck.java", "http://registry:8080/eureka/apps/user-manager", "<status>UP</status>" ]
    depends_on:
      mysql:
        condition: service_healthy
    links:
      - activemq
      - registry

  identity-integration-service:
    image: repo.backbase.com/backbase-docker-releases/identity-integration-service:${BB_VERSION}
    ports:
      - "8070:8080"
    environment:
      <<: *common-variables
      identity.serverUrl: http://backbase-identity:8080/auth
      identity.masterAdmin.username: admin
      identity.masterAdmin.password: admin
      identity.realmConfiguration.fallbackOptions.enableUser: true
      identity.realmConfiguration.fallbackOptions.useTemporaryPassword: false
      realmConfiguration.realms.customer.enableUser: true
      realmConfiguration.realms.customer.useTemporaryPassword: true
      realmConfiguration.realms.employee.enableUser: true
      realmConfiguration.realms.employee.useTemporaryPassword: true
    volumes:
      - ./exe/HealthCheck.jar:/tmp/HealthCheck.jar
    healthcheck:
      <<: *healthcheck-defaults
      test: [ "CMD", "java", "-jar", "-Xms5M", "-Xmx10M", "/tmp/HealthCheck.jar", "http://registry:8080/eureka/apps/identity-integration-service", "<status>UP</status>" ]
    links:
      - registry
      - backbase-identity

  product-catalog-task:
    image: repo.backbase.com/backbase-stream-images/product-catalog-task:${STREAM_VERSION}
    profiles:
      - bootstrap
    environment:
      <<: *common-variables
      spring.config.additional-location: file:/tmp/ingestion.yml
      SPRING_PROFILES_ACTIVE: bootstrap
    volumes:
      - ../config/stream/ingestion.yml:/tmp/ingestion.yml
    depends_on:
      token-converter:
        condition: service_healthy
      arrangement-manager:
        condition: service_healthy

  legal-entity-bootstrap-task:
    image: repo.backbase.com/backbase-stream-images/legal-entity-bootstrap-task:${STREAM_VERSION}
    profiles:
      - bootstrap
    environment:
      <<: *common-variables
      spring.config.additional-location: file:/tmp/ingestion.yml
    volumes:
      - ../config/stream/ingestion.yml:/tmp/ingestion.yml
    depends_on:
      token-converter:
        condition: service_healthy
      access-control:
        condition: service_healthy
      arrangement-manager:
        condition: service_healthy
      user-manager:
        condition: service_healthy
      identity-integration-service:
        condition: service_healthy
      backbase-identity:
        condition: service_healthy
      product-catalog-task:
        condition: service_completed_successfully

  wiremock:
    image: wiremock/wiremock:2.32.0
    profiles:
      - with-mocks
    command:
      - --global-response-templating
      - --verbose
    volumes:
      - ./stubs:/home/wiremock

  postman-health-check:
    image: postman/newman
    platform: linux/amd64
    command:
      run /etc/newman/postman_collection.json --environment="/etc/newman/postman_environment.json"
    volumes:
      -  ../../test/postman/HealthCheck_Local-Backend-Environment.postman_collection.json:/etc/newman/postman_collection.json
      -  ../../test/postman/Docker-Backend-Environment.postman_environment.json:/etc/newman/postman_environment.json
    depends_on:
      access-control:
        condition: service_healthy
      arrangement-manager:
        condition: service_healthy
      backbase-identity:
        condition: service_healthy
      identity-integration-service:
        condition: service_healthy
      token-converter:
        condition: service_healthy
      user-manager:
        condition: service_healthy

  employee-app:
    image: repo.backbase.com/backbase-docker-releases/employee-app:2023.08-no-production
    environment:
      PORT: 8080
      AUTH_URL: http://localhost:8180/auth/
      API_ROOT: http://localhost:8080/api
      AUTH_REALM: "employee"
      AUTH_SCOPE: openids
      AUTH_CLIENT_ID: bb-web-client
      AUTH_LANDING_PAGE: select-context
      AUTH_REDIRECT_PAGE: redirect
    ports:
      - "8080:8080"
    volumes:
      - ./nginx/api.conf:/nginx-config/server/15-api.conf
      - ./exe/HealthCheck.jar:/tmp/HealthCheck.jar
    healthcheck:
      <<: *healthcheck-defaults
      test: [ "CMD", "java", "-jar", "-Xms5M", "-Xmx10M", "/tmp/HealthCheck.jar", "http://registry:8080/eureka/apps/employee-app", "<status>UP</status>" ]

    links:
      - edge
      - backbase-identity

  retail-app:
    image: crreference914.azurecr.io/retail-usa:2024.06.2
    environment:
      AUTH_URL: http://localhost:8180/auth/
      PORT: 9090
      "API_ROOT": /api/
      "AUTH_CLIENT_ID": "bb-web-client"
      "AUTH_LANDING_PAGE": "select-context"
      "AUTH_REALM": "customer"
      "AUTH_REDIRECT_PAGE": "redirect"
      "AUTH_SCOPE": "openid"
      "BASE_HREF": /
    ports:
      - "9090:9090"
    volumes:
      - ./nginx/api.conf:/nginx-config/server/15-api.conf
    healthcheck:
      test: [ "CMD", "none" ]
      disable: true
    links:
      - edge

  web-authentication:
    image: repo.backbase.com/backbase-docker-releases/web-authentication:2024.06
    environment:
      <<: [*common-variables, *message-broker-variables, *database-variables ]
      spring.datasource.url: jdbc:mysql://mysql:3306/web-authentication?useSSL=false&allowPublicKeyRetrieval=true&cacheServerConfiguration=true&createDatabaseIfNotExist=true
      backbase.authenticators.ot.verificationAttemptsAllowed: 4
      backbase.authenticators.channels.email: true
      backbase.authenticators.otp.fromEmail: bootcamp@bb.com
      backbase.authenticators.otp.fromSms: 123456789
      backbase.pushnotification.pushToAppName: appName
      backbase.pushnotification.pushPriority: 7
      backbase.pushnotification.authCodePlaceHolder: authCode
      backbase.pushnotification.pushTitleConfig.objectPath: /identity/push-notifications/web-auth-push-title
      backbase.pushnotification.pushTitleConfig.repositoryId: resourceRepository
      backbase.pushnotification.pushBodyConfig.objectPath: /identity/push-notifications/web-auth-push-body
      backbase.pushnotification.pushBodyConfig.repositoryId: resourceRepository
      backbase.contentservices.messagePriority: 7
      backbase.contentservices.otpPlaceholder: OTP
      backbase.contentservices.templateRendering: SIMPLE
      backbase.contentservices.channel.email.title.contentId: titleId
      backbase.contentservices.channel.email.title.objectPath: /identity/otp/web-auth-otp-email-title
      backbase.contentservices.channel.email.title.repositoryId: resourceRepository
      backbase.contentservices.channel.email.body.contentId: bodyId
      backbase.contentservices.channel.email.body.objectPath: /identity/otp/web-auth-otp-email-body
      backbase.contentservices.channel.email.body.repositoryId: resourceRepository
    ports:
      - "8980:8080"
    volumes:
      - ./exe/HealthCheck.jar:/tmp/HealthCheck.jar
    healthcheck:
      <<: *healthcheck-defaults
      test: [ "CMD", "java", "-jar", "-Xms5M", "-Xmx10M", "/tmp/HealthCheck.jar", "http://registry:8080/eureka/apps/web-authentication", "<status>UP</status>" ]

    links:
      - edge
      - backbase-identity
      - content-services
      - communication-service

  content-services:
     image: repo.backbase.com/backbase-docker-releases/contentservices:2024.03-LTS
     ports:
       - "8383:8080"
       - "5005:5005"
     environment:
       <<: [*common-variables, *message-broker-variables, *database-variables ]
       spring.datasource.url: jdbc:mysql://mysql:3306/content-services?useSSL=false&allowPublicKeyRetrieval=true&cacheServerConfiguration=true&createDatabaseIfNotExist=true
     volumes:
       - ./scripts/HealthCheck.jar:/tmp/HealthCheck.jar
     healthcheck:
       <<: *healthcheck-defaults
       test: [ "CMD", "java", "-jar", "-Xms5M", "-Xmx10M", "/tmp/HealthCheck.jar", "http://registry:8080/eureka/apps/content-services", "<status>UP</status>" ]
     links:
       - registry
       - mysql
       - activemq


  communication-service:
   image: repo.backbase.com/backbase-docker-releases/communication:2024.06
   ports:
     - "8090:8080"
   environment:
     <<: [*common-variables, *message-broker-variables, *database-variables ]
     eureka.client.enabled: 'true'
     backbase.communication.channels.email."0": email-low-priority
     backbase.communication.channels.email."1-6": email-high-priority
     backbase.communication.channels.email."7": email-highest-priority
     spring.cloud.stream.dynamicDestinations: false
     spring.cloud.stream.default-binder: activemq
     spring.cloud.stream.bindings.email-low-priority.destination: Backbase.communication.email-low-priority
     spring.cloud.stream.bindings.email-high-priority.destination: Backbase.communication.email-high-priority
     spring.cloud.stream.bindings.email-highest-priority.destination: Backbase.communication.email-highest-priority
   volumes:
     - ./scripts/HealthCheck.jar:/tmp/HealthCheck.jar
   healthcheck:
     <<: *healthcheck-defaults
     test: [ "CMD", "java", "-jar", "-Xms5M", "-Xmx10M", "/tmp/HealthCheck.jar", "http://registry:8080/eureka/apps/<EXAMPLE-SERVICE-NAME>", "<status>UP</status>" ]
   links:
     - registry
     - mysql
     - activemq